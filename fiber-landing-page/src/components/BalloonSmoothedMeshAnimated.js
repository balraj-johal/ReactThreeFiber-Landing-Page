/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useEffect, useState } from 'react';
import { useGLTF } from '@react-three/drei';
import { motion } from "framer-motion-3d";


let BalloonSmoothedMeshAnimated = React.forwardRef(({ ...props }, ref) => {
    const { nodes } = useGLTF('/StarBalloon-transformed.glb');

    const [animVariants, setAnimVariants] = useState({
        "initial" : { x: props.initial.x, y: props.initial.y },
        "animated" : { x: props.target.x, y: props.target.y },
    });

    const { initial, target } = props;
    useEffect(() => {
        setAnimVariants({
            "initial" : { x: initial.x, y: initial.y },
            "animated" : { x: target.x, y: target.y },
        })
        console.log(initial, target)
    }, [initial, target]);

    return (
        <motion.group 
            ref={ref} 
            {...props} 
            dispose={null}
            initial="hidden"
            animate={props.animating ? "animated" : "initial"}
            variants={animVariants}
        >
            <mesh 
                geometry={nodes['Balloon_-_smoothed'].geometry} 
                scale={[props.scale, props.scale, props.scale]}
                onClick={props.handleClick}
                // material={materials['Balloon.003']} 
            >
                <meshPhysicalMaterial 
                    color={props.colour} 
                    roughness={0.2}
                    metalness={0.79}
                    reflectivity={0.5}
                    clearcoat={0.57}
                    clearcoatRoughness={0.5}
                    transparent={true}
                    opacity={1}
                />  
            </mesh>
        </motion.group>
    )
})

export default BalloonSmoothedMeshAnimated;

useGLTF.preload('/StarBalloon-transformed.glb');
